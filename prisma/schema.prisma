generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int      @id @default(autoincrement())
  email      String   @unique
  name       String?
  password   String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  avatar     String?
}

model Company {
  id                  Int      @id @default(autoincrement())
  name                String?
  email               String?
  code                String?
  created_at          DateTime @default(now())
  updated_at          DateTime @updatedAt
  autos               Auto[]
  reportForAutoOwner  Report[] @relation("autoOwner")
  reportForCargoOwner Report[] @relation("cargoOwner")
}

model AutoBrand {
  id    Int    @id @default(autoincrement())
  name  String @unique
  autos Auto[]
}

model Auto {
  id          Int        @id @default(autoincrement())
  autoNum     String
  company     Company?   @relation(fields: [companyId], references: [id])
  companyId   Int?
  autoBrand   AutoBrand? @relation(fields: [autoBrandId], references: [id])
  autoBrandId Int?
  trailNum    String?
  driver      String?
  contact     String?
  license     String?
  notes       String?
}

model Route {
  id       Int      @id @default(autoincrement())
  name     String
  distance Int?
  Report   Report[]
}

model Cargo {
  id        Int      @id @default(autoincrement())
  name      String
  isDefault Boolean  @default(false)
  Report    Report[]
}

model Report {
  id           Int      @id @default(autoincrement())
  date         DateTime @db.Date
  route        Route    @relation(fields: [routeId], references: [id])
  routeId      Int
  cargo        Cargo    @relation(fields: [cargoId], references: [id])
  cargoId      Int
  autoOwner    Company? @relation("autoOwner", fields: [autoOwnerId], references: [id])
  autoOwnerId  Int?
  cargoOwner   Company? @relation("cargoOwner", fields: [cargoOwnerId], references: [id])
  cargoOwnerId Int?
  autoNum      String?
  driver       String?
  rate         Int?
}
